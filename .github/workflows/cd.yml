
name: CD Pipeline
on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
jobs:
  deploy:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: portfolio-artifact
          path: ./artifact
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: Unzip artifact
        run: |
          echo "Unzipping artifact..."
          unzip ./artifact/portfolio-artifact.zip -d ./deployed
          ls -la ./deployed
      - name: Install dependencies
        working-directory: ./deployed
        run: |
          echo "Installing dependencies..."
          npm ci
      - name: Stop any existing server
        working-directory: ./deployed
        run: |
          echo "Stopping existing server..."
          pkill -f "node.*server.js" || true
          lsof -i :3000 || true
      - name: Log runner IP address
        run: |
          echo "Runner IP address:"
          hostname -I || echo "Could not determine IP address"
          curl -s http://ifconfig.me || echo "Could not fetch public IP"
      - name: Start application in background
        working-directory: ./deployed
        env:
          PORT: 3000
        run: |
          echo "Starting application on port 3000..."
          nohup node src/server.js &
          echo $! > server.pid
        timeout-minutes: 1
      - name: Verify server is running
        working-directory: ./deployed
        run: |
          echo "Waiting for server to start..."
          sleep 15
          echo "Checking server at http://localhost:3000"
          curl -v -f http://localhost:3000 || exit 1
          echo "Server is running successfully"
          echo "Access the website at http://$(hostname -I | awk '{print $1}'):3000 (if on the same network) or http://<runner-public-ip>:3000"
