name: CD Pipeline
on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
jobs:
  deploy:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: portfolio-artifact
          path: ./artifact
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: Unzip artifact
        run: |
          echo "Clearing deployed directory..."
          rm -rf /home/hp/Testing
          echo "Unzipping artifact..."
          unzip -o ./artifact/portfolio-artifact.zip -d /home/hp/Testing
          ls -la /home/hp/Testing
      - name: Install dependencies
        working-directory: /home/hp/Testing
        run: |
          echo "Installing dependencies..."
          npm install
      - name: Stop any existing server
        working-directory: /home/hp/Testing
        run: |
          echo "Stopping existing server..."
          pkill -f "node src/server.js" || true
          lsof -i :${{ secrets.APP_PORT || '3000' }} || true
      - name: Start application in background
        working-directory: /home/hp/Testing
        env:
          PORT: ${{ secrets.APP_PORT || '3000' }}
        run: |
          echo "Starting application on port ${PORT}..."
          nohup npm start &
          echo $! > server.pid
        timeout-minutes: 1
      - name: Verify server is running
        working-directory: /home/hp/Testing
        run: |
          echo "Waiting for server to start..."
          sleep 15
          echo "Checking server at http://localhost:${{ secrets.APP_PORT || '3000' }}"
          curl -v -f http://localhost:${{ secrets.APP_PORT || '3000' }} || exit 1
          echo "Server is running successfully"
